#配置端口
server:
  port: 9527

#配置spring
spring:
  application:
    name: gateway-center
  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/dida_manager?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root

  # cloud 相关配置
  cloud:
    #geatway 相关配置
    gateway:
      #配置全局超时控制
      httpclient:
        connect-timeout: 3000
        response-timeout: 5s
      discovery:
        locator:
          enabled: true   #开启从注册中心动态创建路由的功能，利用微服务名进行路由，这样才可以实现负载均衡
      #配置路由
      routes:
        - id: project-route           #路由的ID，没有固定规则但要求要唯一，建议配合服务名
          uri: lb://project-service   #lb://后面写上注册到注册中心的微服务名称
          predicates:                 #断言
            - Path=/project/**        #以 /project 开头的请求都转发到 project-service 服务
        - id: auth-route
          uri: lb://auth-center
          predicates:
            - Path=/oauth/**
        - id: auth-login-route       #专门用来过滤掉 spring security 自带的 /login 接口
          uri: lb://auth-center
          predicates:
            - Path=/login

    #注册进 Consul
    consul:
      host: localhost         #先配置在本机
      port: 8500              #Consul默认端口8500
      discovery:
        register: true
        instance-id: ${spring.application.name}-1
        service-name: ${spring.application.name}
        port: ${server.port}
        prefer-ip-address: true #开启 ip 地址注册(默认是DNS解析）
        ip-address: localhost
    #ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
    #eactorLoadBalancerClientRibbonWarnLogger : You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
#    loadbalancer:
#      ribbon:
#        enabled: false

    #配置config-client
#    config:
#      label: master          #分支名称
#      name: config           #配置文件名称
#      profile: dev           #读取后缀名称
#      #上述3个综合起来 = master分支上的 config-dev.yml 配置文件被读取
#      uri: http://localhost:10010   #配置中心地址

  #rabbitmq
#  rabbitmq:
#    host: 172.16.208.150
#    port: 5672
#    username: hedon
#    password: hedon
#    virtual-host: /hedon

# mybatis 配置
mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml

#日志配置
logging:
  file:
    name: ./logs/gateway-center.log   #文件名
    clean-history-on-start: true

# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: "*"